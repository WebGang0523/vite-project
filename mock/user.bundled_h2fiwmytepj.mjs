// mock/user.ts
function createUserList() {
  return [
    {
      userId: 1,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "admin",
      password: "123456",
      desc: "\u5E73\u53F0\u7BA1\u7406\u5458",
      roles: ["\u5E73\u53F0\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail"],
      routes: ["home"],
      token: "Admin Token"
    },
    {
      userId: 2,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "system",
      password: "123456",
      desc: "\u7CFB\u7EDF\u7BA1\u7406\u5458",
      roles: ["\u7CFB\u7EDF\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail", "cuser.user"],
      routes: ["home"],
      token: "System Token"
    }
  ];
}
var user_default = [
  // 用户登录接口
  {
    url: "/api/user/login",
    //请求地址
    method: "post",
    //请求方式
    response: ({ body }) => {
      const { username, password } = body;
      const checkUser = createUserList().find(
        (item) => item.username === username && item.password === password
      );
      if (!checkUser) {
        return { code: 201, data: { message: "\u8D26\u53F7\u6216\u8005\u5BC6\u7801\u4E0D\u6B63\u786E" } };
      }
      const { token } = checkUser;
      return { code: 200, data: { token } };
    }
  },
  // 获取用户信息
  {
    url: "/api/user/info",
    method: "get",
    response: (request) => {
      const token = request.headers.token;
      const checkUser = createUserList().find((item) => item.token === token);
      if (!checkUser) {
        return { code: 201, data: { message: "\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u5931\u8D25" } };
      }
      return { code: 200, data: { checkUser } };
    }
  }
];
export {
  user_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay91c2VyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkQ6XFxcXHByb2plY3RcXFxcZGVtb1xcXFx2aXRlLXByb2plY3RcXFxcbW9ja1xcXFx1c2VyLnRzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIkQ6XFxcXHByb2plY3RcXFxcZGVtb1xcXFx2aXRlLXByb2plY3RcXFxcbW9ja1wiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vRDovcHJvamVjdC9kZW1vL3ZpdGUtcHJvamVjdC9tb2NrL3VzZXIudHNcIjtcclxuZnVuY3Rpb24gY3JlYXRlVXNlckxpc3QoKSB7XHJcbiAgcmV0dXJuIFtcclxuICAgIHtcclxuICAgICAgdXNlcklkOiAxLFxyXG4gICAgICBhdmF0YXI6XHJcbiAgICAgICAgJ2h0dHBzOi8vd3BpbWcud2FsbHN0Y24uY29tL2Y3Nzg3MzhjLWU0ZjgtNDg3MC1iNjM0LTU2NzAzYjRhY2FmZS5naWYnLFxyXG4gICAgICB1c2VybmFtZTogJ2FkbWluJyxcclxuICAgICAgcGFzc3dvcmQ6ICcxMjM0NTYnLFxyXG4gICAgICBkZXNjOiAnXHU1RTczXHU1M0YwXHU3QkExXHU3NDA2XHU1NDU4JyxcclxuICAgICAgcm9sZXM6IFsnXHU1RTczXHU1M0YwXHU3QkExXHU3NDA2XHU1NDU4J10sXHJcbiAgICAgIGJ1dHRvbnM6IFsnY3VzZXIuZGV0YWlsJ10sXHJcbiAgICAgIHJvdXRlczogWydob21lJ10sXHJcbiAgICAgIHRva2VuOiAnQWRtaW4gVG9rZW4nLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgdXNlcklkOiAyLFxyXG4gICAgICBhdmF0YXI6XHJcbiAgICAgICAgJ2h0dHBzOi8vd3BpbWcud2FsbHN0Y24uY29tL2Y3Nzg3MzhjLWU0ZjgtNDg3MC1iNjM0LTU2NzAzYjRhY2FmZS5naWYnLFxyXG4gICAgICB1c2VybmFtZTogJ3N5c3RlbScsXHJcbiAgICAgIHBhc3N3b3JkOiAnMTIzNDU2JyxcclxuICAgICAgZGVzYzogJ1x1N0NGQlx1N0VERlx1N0JBMVx1NzQwNlx1NTQ1OCcsXHJcbiAgICAgIHJvbGVzOiBbJ1x1N0NGQlx1N0VERlx1N0JBMVx1NzQwNlx1NTQ1OCddLFxyXG4gICAgICBidXR0b25zOiBbJ2N1c2VyLmRldGFpbCcsICdjdXNlci51c2VyJ10sXHJcbiAgICAgIHJvdXRlczogWydob21lJ10sXHJcbiAgICAgIHRva2VuOiAnU3lzdGVtIFRva2VuJyxcclxuICAgIH0sXHJcbiAgXVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBbXHJcbiAgLy8gXHU3NTI4XHU2MjM3XHU3NjdCXHU1RjU1XHU2M0E1XHU1M0UzXHJcbiAge1xyXG4gICAgdXJsOiAnL2FwaS91c2VyL2xvZ2luJywgLy9cdThCRjdcdTZDNDJcdTU3MzBcdTU3NDBcclxuICAgIG1ldGhvZDogJ3Bvc3QnLCAvL1x1OEJGN1x1NkM0Mlx1NjVCOVx1NUYwRlxyXG4gICAgcmVzcG9uc2U6ICh7IGJvZHkgfSkgPT4ge1xyXG4gICAgICAvL1x1ODNCN1x1NTNENlx1OEJGN1x1NkM0Mlx1NEY1M1x1NjQzQVx1NUUyNlx1OEZDN1x1Njc2NVx1NzY4NFx1NzUyOFx1NjIzN1x1NTQwRFx1NEUwRVx1NUJDNlx1NzgwMVxyXG4gICAgICBjb25zdCB7IHVzZXJuYW1lLCBwYXNzd29yZCB9ID0gYm9keVxyXG4gICAgICAvL1x1OEMwM1x1NzUyOFx1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NTFGRFx1NjU3MCxcdTc1MjhcdTRFOEVcdTUyMjRcdTY1QURcdTY2MkZcdTU0MjZcdTY3MDlcdTZCNjRcdTc1MjhcdTYyMzdcclxuICAgICAgY29uc3QgY2hlY2tVc2VyID0gY3JlYXRlVXNlckxpc3QoKS5maW5kKFxyXG4gICAgICAgIChpdGVtKSA9PiBpdGVtLnVzZXJuYW1lID09PSB1c2VybmFtZSAmJiBpdGVtLnBhc3N3b3JkID09PSBwYXNzd29yZCxcclxuICAgICAgKVxyXG4gICAgICAvL1x1NkNBMVx1NjcwOVx1NzUyOFx1NjIzN1x1OEZENFx1NTZERVx1NTkzMVx1OEQyNVx1NEZFMVx1NjA2RlxyXG4gICAgICBpZiAoIWNoZWNrVXNlcikge1xyXG4gICAgICAgIHJldHVybiB7IGNvZGU6IDIwMSwgZGF0YTogeyBtZXNzYWdlOiAnXHU4RDI2XHU1M0Y3XHU2MjE2XHU4MDA1XHU1QkM2XHU3ODAxXHU0RTBEXHU2QjYzXHU3ODZFJyB9IH1cclxuICAgICAgfVxyXG4gICAgICAvL1x1NTk4Mlx1Njc5Q1x1NjcwOVx1OEZENFx1NTZERVx1NjIxMFx1NTI5Rlx1NEZFMVx1NjA2RlxyXG4gICAgICBjb25zdCB7IHRva2VuIH0gPSBjaGVja1VzZXJcclxuICAgICAgcmV0dXJuIHsgY29kZTogMjAwLCBkYXRhOiB7IHRva2VuIH0gfVxyXG4gICAgfSxcclxuICB9LFxyXG4gIC8vIFx1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2RlxyXG4gIHtcclxuICAgIHVybDogJy9hcGkvdXNlci9pbmZvJyxcclxuICAgIG1ldGhvZDogJ2dldCcsXHJcbiAgICByZXNwb25zZTogKHJlcXVlc3QpID0+IHtcclxuICAgICAgLy9cdTgzQjdcdTUzRDZcdThCRjdcdTZDNDJcdTU5MzRcdTY0M0FcdTVFMjZ0b2tlblxyXG4gICAgICBjb25zdCB0b2tlbiA9IHJlcXVlc3QuaGVhZGVycy50b2tlblxyXG4gICAgICAvL1x1NjdFNVx1NzcwQlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NjYyRlx1NTQyNlx1NTMwNVx1NTQyQlx1NjcwOVx1NkIyMXRva2VuXHU3NTI4XHU2MjM3XHJcbiAgICAgIGNvbnN0IGNoZWNrVXNlciA9IGNyZWF0ZVVzZXJMaXN0KCkuZmluZCgoaXRlbSkgPT4gaXRlbS50b2tlbiA9PT0gdG9rZW4pXHJcbiAgICAgIC8vXHU2Q0ExXHU2NzA5XHU4RkQ0XHU1NkRFXHU1OTMxXHU4RDI1XHU3Njg0XHU0RkUxXHU2MDZGXHJcbiAgICAgIGlmICghY2hlY2tVc2VyKSB7XHJcbiAgICAgICAgcmV0dXJuIHsgY29kZTogMjAxLCBkYXRhOiB7IG1lc3NhZ2U6ICdcdTgzQjdcdTUzRDZcdTc1MjhcdTYyMzdcdTRGRTFcdTYwNkZcdTU5MzFcdThEMjUnIH0gfVxyXG4gICAgICB9XHJcbiAgICAgIC8vXHU1OTgyXHU2NzlDXHU2NzA5XHU4RkQ0XHU1NkRFXHU2MjEwXHU1MjlGXHU0RkUxXHU2MDZGXHJcbiAgICAgIHJldHVybiB7IGNvZGU6IDIwMCwgZGF0YTogeyBjaGVja1VzZXIgfSB9XHJcbiAgICB9LFxyXG4gIH0sXHJcbl1cclxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUNBLFNBQVMsaUJBQWlCO0FBQ3hCLFNBQU87QUFBQSxJQUNMO0FBQUEsTUFDRSxRQUFRO0FBQUEsTUFDUixRQUNFO0FBQUEsTUFDRixVQUFVO0FBQUEsTUFDVixVQUFVO0FBQUEsTUFDVixNQUFNO0FBQUEsTUFDTixPQUFPLENBQUMsZ0NBQU87QUFBQSxNQUNmLFNBQVMsQ0FBQyxjQUFjO0FBQUEsTUFDeEIsUUFBUSxDQUFDLE1BQU07QUFBQSxNQUNmLE9BQU87QUFBQSxJQUNUO0FBQUEsSUFDQTtBQUFBLE1BQ0UsUUFBUTtBQUFBLE1BQ1IsUUFDRTtBQUFBLE1BQ0YsVUFBVTtBQUFBLE1BQ1YsVUFBVTtBQUFBLE1BQ1YsTUFBTTtBQUFBLE1BQ04sT0FBTyxDQUFDLGdDQUFPO0FBQUEsTUFDZixTQUFTLENBQUMsZ0JBQWdCLFlBQVk7QUFBQSxNQUN0QyxRQUFRLENBQUMsTUFBTTtBQUFBLE1BQ2YsT0FBTztBQUFBLElBQ1Q7QUFBQSxFQUNGO0FBQ0Y7QUFFQSxJQUFPLGVBQVE7QUFBQTtBQUFBLEVBRWI7QUFBQSxJQUNFLEtBQUs7QUFBQTtBQUFBLElBQ0wsUUFBUTtBQUFBO0FBQUEsSUFDUixVQUFVLENBQUMsRUFBRSxLQUFLLE1BQU07QUFFdEIsWUFBTSxFQUFFLFVBQVUsU0FBUyxJQUFJO0FBRS9CLFlBQU0sWUFBWSxlQUFlLEVBQUU7QUFBQSxRQUNqQyxDQUFDLFNBQVMsS0FBSyxhQUFhLFlBQVksS0FBSyxhQUFhO0FBQUEsTUFDNUQ7QUFFQSxVQUFJLENBQUMsV0FBVztBQUNkLGVBQU8sRUFBRSxNQUFNLEtBQUssTUFBTSxFQUFFLFNBQVMseURBQVksRUFBRTtBQUFBLE1BQ3JEO0FBRUEsWUFBTSxFQUFFLE1BQU0sSUFBSTtBQUNsQixhQUFPLEVBQUUsTUFBTSxLQUFLLE1BQU0sRUFBRSxNQUFNLEVBQUU7QUFBQSxJQUN0QztBQUFBLEVBQ0Y7QUFBQTtBQUFBLEVBRUE7QUFBQSxJQUNFLEtBQUs7QUFBQSxJQUNMLFFBQVE7QUFBQSxJQUNSLFVBQVUsQ0FBQyxZQUFZO0FBRXJCLFlBQU0sUUFBUSxRQUFRLFFBQVE7QUFFOUIsWUFBTSxZQUFZLGVBQWUsRUFBRSxLQUFLLENBQUMsU0FBUyxLQUFLLFVBQVUsS0FBSztBQUV0RSxVQUFJLENBQUMsV0FBVztBQUNkLGVBQU8sRUFBRSxNQUFNLEtBQUssTUFBTSxFQUFFLFNBQVMsbURBQVcsRUFBRTtBQUFBLE1BQ3BEO0FBRUEsYUFBTyxFQUFFLE1BQU0sS0FBSyxNQUFNLEVBQUUsVUFBVSxFQUFFO0FBQUEsSUFDMUM7QUFBQSxFQUNGO0FBQ0Y7IiwKICAibmFtZXMiOiBbXQp9Cg==
